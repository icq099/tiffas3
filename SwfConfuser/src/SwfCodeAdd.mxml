<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" creationComplete="application1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import bean.core.utils.BytesUtils;
			import bean.operation.FileBrowseAndLoadOperation;
			import bean.utils.FileUtil;
			
			import format.swf.ABCFile;
			import format.swf.Instance_info;
			import format.swf.Method_body_info;
			import format.swf.Method_info;
			import format.swf.Multiname_info;
			import format.swf.String_info;
			import format.swf.SwfFile;
			import format.swf.tag.DoABC;
			import format.swf.tag.TagOfSwf;
			import format.swf.writer.SwfWriter;
			
			import mx.events.FlexEvent;
			
			import yzhkof.BytesUtil;

			private var op:FileBrowseAndLoadOperation;

			private var data:ByteArray;
			
			[Embed(source="./bin-debug/opcode",mimeType="application/octet-stream")]
			private var opcodeClass:Class;
			
			private var DATA_TAG_OFFSET:int = 0x218;

			private var loaderData:ByteArray;

			private var loadReader:SwfFile;

			private var finalData:ByteArray;

			private var doabc:DoABC;

			private var addCodeSwf:ByteArray;

			private var lengthDelta:int;
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
//				loaderData = ByteArray(new SwfLoaderData);
			}

			protected function button1_clickHandler(event:MouseEvent):void
			{
				op = FileUtil.browseAndLoadFile([new FileFilter("swf文件","*.swf")]);
				op.onComplete.addListener(function():void
				{
					data = op.data;
					doData();
				});
			}

			protected function button2_clickHandler(event:MouseEvent):void
			{
				new FileReference().save(finalData,"addString_" + op.name);
			}

			private function doData():void
			{
				lengthDelta = 0;
				var swfFile:SwfFile = new SwfFile(data);
				addCodeSwf = swfFile.bytesUncompressWithOutHeader;
				doabc = swfFile.tagReader.getTagReaderByType(TagOfSwf.DOABC)[0] as DoABC;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var stringCountOff:int = doabc.abcfile.constant_pool.string_offset;
				addCodeSwf.position = stringCountOff;
				var stringCount:int = doabc.abcfile.constant_pool.string_count + 3;
				lengthDelta += SwfWriter.replayVU32(addCodeSwf,stringCount);//改变cpool里StringCount的值;
				
				var stringsArr:Array = doabc.abcfile.constant_pool.string;
				addStringInfo("stage");
				addStringInfo("Stage");
				addStringInfo("StageTest/stage/get");
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var multiNameCountOff:int = doabc.abcfile.constant_pool.multiname_offset + lengthDelta;
				addCodeSwf.position = multiNameCountOff;
				var multiNameCount:int = doabc.abcfile.constant_pool.multiname_count + 2;
				lengthDelta += SwfWriter.replayVU32(addCodeSwf,multiNameCount);//改变cpool里MultiNameCount的值;
				
				var multiNameArr:Array = doabc.abcfile.constant_pool.multiname;
				addMultiName(0x07,2,stringsArr.length);//StageTest(文档类)
				addMultiName(0x07,3,stringsArr.length + 1);//display.Stage;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var methodCountOff:int = doabc.abcfile.method_offset + lengthDelta;
				addCodeSwf.position = methodCountOff;
				var methodCount:int = doabc.abcfile.method_count  + 1 ;
				lengthDelta += SwfWriter.replayVU32(addCodeSwf,methodCount);//改变doabc里methodCount的值;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var methodArr:Array = doabc.abcfile.method;
				var final_method_offset:int = Method_info(methodArr[methodArr.length-1]).offset +Method_info(methodArr[methodArr.length-1]).length + lengthDelta;
				var addMethodByte:ByteArray = new ByteArray
				addMethodByte.endian = Endian.LITTLE_ENDIAN;
				SwfWriter.writeMethod(addMethodByte,0,multiNameArr.length + 1,[],stringsArr.length + 2,0);
				SwfWriter.replayAndAddBytes(addCodeSwf,final_method_offset,0,addMethodByte);//MethodInfo写进cpool;
				lengthDelta += addMethodByte.length;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var instanceArr:Array = doabc.abcfile.instance;
				var final_trait_offset:int = Instance_info(instanceArr[instanceArr.length-1]).trait_offset + lengthDelta;
				var taintsCount:uint = Instance_info(instanceArr[instanceArr.length-1]).trait_count   + 1   ;
				addCodeSwf.position = final_trait_offset;
				lengthDelta += SwfWriter.replayVU32(addCodeSwf,taintsCount);
				var traitBytes:ByteArray = new ByteArray;//trait的bytesArray
				traitBytes.endian = Endian.LITTLE_ENDIAN;
				SwfWriter.writeVU32(traitBytes,multiNameArr.length);//trait的名字(方法的名字);
				traitBytes.writeByte(0x62);
				SwfWriter.writeVU32(traitBytes,0);
				SwfWriter.writeVU32(traitBytes,methodArr.length);//method的索引;
				SwfWriter.writeVU32(traitBytes,1);
				SwfWriter.writeVU32(traitBytes,0);
				SwfWriter.replayAndAddBytes(addCodeSwf,addCodeSwf.position,0,traitBytes);//trait写进instance;
				lengthDelta += traitBytes.length;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var methodBodyCountOff:int = doabc.abcfile.method_body_offset + lengthDelta;
				addCodeSwf.position = methodBodyCountOff;
				var methodBodyCount:int = doabc.abcfile.method_body_count + 1;
				lengthDelta += SwfWriter.replayVU32(addCodeSwf,methodBodyCount);//改变doabc里methodBodyCount的值;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var methodBodyArr:Array = doabc.abcfile.method_body;
				var final_methodBody_offset:int = Method_body_info(methodBodyArr[methodBodyArr.length-1]).offset + Method_body_info(methodBodyArr[methodBodyArr.length-1]).length + lengthDelta;
				var addMethodBodyByte:ByteArray = new ByteArray
				addMethodBodyByte.endian = Endian.LITTLE_ENDIAN;
				var code:ByteArray = ByteArray(new opcodeClass);
				SwfWriter.writeMethodBody(addMethodBodyByte,methodArr.length,2,1,9,10,code.length,code);
				SwfWriter.replayAndAddBytes(addCodeSwf,final_methodBody_offset,0,addMethodBodyByte);//MethodBodyInfo写进cpool;
				lengthDelta += addMethodBodyByte.length;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var addTagLengthByte:ByteArray = new ByteArray;
				var oldTagHeaderLength:int = (doabc.tag.length >= 0x3f)?6:2;
				SwfWriter.writeSwfTagCodeAndLength(addTagLengthByte,82,doabc.tag.length + lengthDelta);
				SwfWriter.replayAndAddBytes(addCodeSwf,doabc.tag.offset,oldTagHeaderLength,addTagLengthByte);//新的DoABC tag Header写进swf;
				
				
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var header:ByteArray = swfFile.bytesHeaderTag;
				header.position = 4;
				header.writeInt(addCodeSwf.length + 8);
				finalData = SwfWriter.getSwfByteData(header,addCodeSwf);//生成新的swf
			}
			
			private function addStringInfo(string:String):void
			{
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var stringsArr:Array = doabc.abcfile.constant_pool.string;
				var final_string_offset:int = String_info(stringsArr[stringsArr.length-1]).offset + String_info(stringsArr[stringsArr.length-1]).length + lengthDelta;
				var addStringByte:ByteArray = new ByteArray;
				addStringByte.endian = Endian.LITTLE_ENDIAN;
				SwfWriter.writeStringInfo(addStringByte,string);
				SwfWriter.replayAndAddBytes(addCodeSwf,final_string_offset,0,addStringByte);//StringInfo写进cpool;
				lengthDelta += addStringByte.length;
			}
			
			private function addMultiName(kind:uint,ns:uint = 0 ,name:uint = 0):void
			{
				//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
				var multiNameArr:Array = doabc.abcfile.constant_pool.multiname;
				var final_multiname_offset:int = Multiname_info(multiNameArr[multiNameArr.length-1]).offset + Multiname_info(multiNameArr[multiNameArr.length-1]).length + lengthDelta;
				var addMultiNameByte:ByteArray = new ByteArray;
				addMultiNameByte.endian = Endian.LITTLE_ENDIAN;
				SwfWriter.writeMultiName(addMultiNameByte,kind,ns,name);
				SwfWriter.replayAndAddBytes(addCodeSwf,final_multiname_offset,0,addMultiNameByte);//MultiNameInfo写进cpool;
				lengthDelta += addMultiNameByte.length;
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button x="10" y="10" label="加载" click="button1_clickHandler(event)"/>
	<s:Button x="88" y="10" label="保存" click="button2_clickHandler(event)"/>
</s:Application>
