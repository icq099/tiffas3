<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="557" height="138" minWidth="955" minHeight="600"
			   creationComplete="application1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import bean.operation.FileBrowseAndLoadOperation;
			import bean.utils.FileUtil;
			
			import format.swf.BytesUtils;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import swfguarder.AddJumpOperation;
			import swfguarder.AddMethodOperation;
			import swfguarder.DoActionAddOperation;
			import swfguarder.ShellAddOperation;
			import swfguarder.StageAddOperation;
			
			import yzhkof.util.Helpers;

			private var op:FileBrowseAndLoadOperation;

			private var data:ByteArray;
			
			private var operationArr:Array = [];
			
			[Embed(source="./bin-debug/no.txt",mimeType="application/octet-stream")]
			private var noTxt:Class;

			private var no:String;

			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				checkbox1_changeHandler(null);
				save_btn.visible = false;
				var notxt:ByteArray = ByteArray(new noTxt);
				no = notxt.readUTFBytes(6);
				
				no_txt.text = no;
				
//				load_btn.visible = false;
				
//				var urlLoader:URLLoader = new URLLoader(new URLRequest("http://yzhkofswf.googlecode.com/svn/trunk/swfConfuser/swfEncry/no/" + no +".txt"));
//				urlLoader.dataFormat = URLLoaderDataFormat.TEXT;
//				urlLoader.addEventListener(Event.COMPLETE,function(e:Event):void
//				{
//					trace(String(urlLoader.data));
//					if(String(urlLoader.data) == "true")
//					{
//						load_btn.visible = true;
//					}
//				});
			}

			protected function button1_clickHandler(event:MouseEvent):void
			{
				op = FileUtil.browseAndLoadFile([new FileFilter("swf文件","*.swf")]);
				op.onSelect.addSingleListener(function():void
				{
					save_btn.visible =false;
				});
				op.onComplete.addListener(function():void
				{
					
				});
			}

			protected function button2_clickHandler(event:MouseEvent):void
			{
				doData();
			}
			
			private function doData():void
			{
				data = BytesUtils.copyBytes(op.data);
				operationArr = new Array;
				 
//				operationArr.push(URLCodeAddOperation);
				operationArr.push(DoActionAddOperation);
				operationArr.push(AddJumpOperation);
				operationArr.push(AddMethodOperation);
				
				if(checkBox.selected == true)
				{
					operationArr.push(StageAddOperation);
					operationArr.push(ShellAddOperation);
					operationArr.push(AddJumpOperation);
					operationArr.push(DoActionAddOperation);
				}
				
				doOperation();
				
//				try
//				{
////					data = new URLCodeAddOperation(data).finalData;
////					data = new DoActionAddOperation(data).finalData;
////					data = new AddJumpOperation(data).finalData;
//					data = new AddMethodOperation(data).finalData;
//					if(checkBox.selected == true)
//					{
//						data = new StageAddOperation(data).finalData;
//						data = new ShellAddOperation(data).finalData;
//						data = new AddJumpOperation(data).finalData;
////						data = new DoActionAddOperation(data).finalData;
//					}
//				}catch(e:Error)
//				{
//					Alert.show("处理出错!\n" + e.toString(),"出错啦");
//				}
			}
			
			private function doOperation():void
			{
				if(operationArr.length > 0)
				{
					dolabel.text = "处理中。。。剩余操作数 " + operationArr.length;
				}
				else
				{
					save_btn.visible = true;
					dolabel.text = "处理完成 ，点击保存按钮保存文件！";
					return;
				}
				
				Helpers.delayCall(function():void
				{
					try
					{
						var op:Class = operationArr.shift();
						data = ByteArray(new op(data).finalData);
					}
					catch(e:Error)
					{
						Alert.show("处理出错!\n" + e.toString(),"出错啦");
					}
					doOperation();
				},1);
			}


			protected function checkbox1_changeHandler(event:Event):void
			{
				if(checkBox.selected == true)
				{
					tip_label.visible = true;
				}
				else
				{
					tip_label.visible = false;
				}
			}


			protected function button3_clickHandler(event:MouseEvent):void
			{
				if(data == null) return;
				var file:FileReference = new FileReference;
				file.save(data,"encry_" + op.name);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button id="load_btn" x="7" y="111" label="加载" click="button1_clickHandler(event)" fontFamily="中易宋体"
			  fontSize="13"/>
	<s:Button x="81" y="111" label="加密" click="button2_clickHandler(event)" fontFamily="中易宋体"
			  fontSize="13"/>
	<s:Label x="10" y="10" fontFamily="中易宋体" fontSize="16" text="Swf Gguarder 1.2"/>
	<s:CheckBox id="checkBox" x="11" y="83" label="加壳" fontSize="14" selected="false" change="checkbox1_changeHandler(event)"/>
	<s:Label id="tip_label" x="65" y="89" fontFamily="中易宋体" fontSize="13"
			 text="（强力反破解壳，针对单个swf工程加密.多swf工程或运行出现异常请不要勾选此项）"/>
	<s:Label x="28" y="38" width="519" fontFamily="中易宋体" fontSize="13"
			 text="        加密后的swf反编译软件打开直接卡死，仅支持as3.0,flash player 9以上版本的swf。"/>
	<s:Label x="503" y="116" text="by yzhkof"/>
	<s:Label id="dolabel" x="250" y="115" width="232" height="20" fontFamily="中易宋体" fontSize="13"
			 text=""/>
	<s:Button id="save_btn" x="155" y="111" label="保存" fontFamily="中易宋体"
			  fontSize="13" click="button3_clickHandler(event)"/>
	<s:Label id="no_txt" x="155" y="18" text=""/>
</s:Application>
